and
as
assert
async
break
class
continue
def
del
elif
else
except
False
finally
for
from
global
if
import
in
is
lambda
None
nonlocal
not
or
pass
raise
return
str
True
try
while
with
yield
breakpoint()
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
Sunday
January
February
March
April
May
June
July
August
September
October
November
December
abstract
arguments
await
boolean
byte
case
catch
char
class
const
continue
debugger
default
delete
do
double
else
enum
enumerate
eval
export
extends
false
final
float
function
goto
implements
import
instanceof
int
interface
let
long
native
new
null
package
private
protected
public
short
static
super
switch
synchronized
this
throw
throws
transient
true
typeof
var
void
volatile
